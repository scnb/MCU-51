C51 COMPILER V9.01   I2C_MCU_UART                                                          11/24/2016 01:03:34 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE I2C_MCU_UART
OBJECT MODULE PLACED IN .\output\i2c_mcu_uart.obj
COMPILER INVOKED BY: F:\51\C51\BIN\C51.EXE i2c_mcu_uart.c BROWSE DEBUG OBJECTEXTEND OBJECT(.\output\i2c_mcu_uart.obj)

line level    source

   1          #include<reg52.h>
   2          #include<INTRINS.H>
   3          
   4          sbit SCL = P0^6;
   5          sbit SDA = P0^7;
   6          
   7          /*∂®“Â¥”µÁƒ‘Ω” ’µƒ ˝æ›¥Ê¥¢±‰¡ø*/
   8          unsigned char receive_data;//÷ªΩ” ’ ˝◊÷£¨»ª∫Û‘⁄ ˝¬Îπ‹…œœ‘ æ
   9          unsigned char receive_flag = 0;//Ω” ’≥…π¶±Í÷æŒª
  10          
  11          sbit HC595_SCK = P1^1;
  12          sbit HC595_RCK = P1^0;
  13          sbit HC595_DATA = P1^4;
  14          
  15          unsigned char addr = 0x01,read_data; 
  16          
  17          unsigned char value_high = 0;
  18          unsigned char value_low = 0;
  19          unsigned char temp = 0;
  20          
  21          code unsigned char Duan_choose[16]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x77,0x7c,0x39,0x5e,
             -0x79,0x71};
  22          code unsigned char Wei_choose[8]={0xfe,0xfd,0xfb,0xf7,0xef,0xdf,0xbf,0x7f};
  23          
  24          /*****************************************************************************
  25          ** ∫Ø ˝√˚≥∆£∫Delay_I2C
  26          ** π¶ƒ‹√Ë ˆ£∫—” ±◊”≥Ã–Ú
  27          ******************************************************************************/
  28          void Delay_i2c(void)
  29          {
  30   1              _nop_();
  31   1              _nop_();
  32   1              _nop_();
  33   1              _nop_();        
  34   1      }
  35          
  36          void InitI2C(void)
  37          {
  38   1               SDA = 1;
  39   1               SCL = 1;
  40   1      }
  41          
  42          /*I2C∆ º–≈∫≈*/
  43          void i2c_start_fun()
  44          {
  45   1              SDA = 1;
  46   1              Delay_i2c();
  47   1              SCL = 1;
  48   1              Delay_i2c();
  49   1              SDA = 0;
  50   1              Delay_i2c();
  51   1              SCL = 0;
  52   1      }
  53          
  54          /*i2cÕ£÷π–≈∫≈*/
C51 COMPILER V9.01   I2C_MCU_UART                                                          11/24/2016 01:03:34 PAGE 2   

  55          void i2c_stop_fun()
  56          {
  57   1              SCL = 0;
  58   1              Delay_i2c();
  59   1              SDA = 0;
  60   1              Delay_i2c();
  61   1              SCL = 1;
  62   1              Delay_i2c();
  63   1              SDA = 1;
  64   1              Delay_i2c();
  65   1      }
  66          
  67          
  68          
  69          
  70          /*i2cœÚ∆˜º˛º¥eeprom÷––¥»Î ˝æ›*/
  71          void i2c_write_data(unsigned char byte)//i2cœ»∑¢ÀÕ∏ﬂŒª‘Ÿ∑¢ÀÕµÕŒª
  72          {
  73   1              unsigned char i;
  74   1              unsigned char j;
  75   1              unsigned char mask = 0x80;
  76   1              for(i = 0;i < 8;i++)
  77   1              {
  78   2                      SCL = 0; //÷ª”–‘⁄sclŒ™µÕµÁ∆Ωµƒ ±∫Ú£¨sdaµƒ◊¥Ã¨≤≈ƒ‹∑¢…˙±‰ªØ
  79   2                      Delay_i2c();
  80   2                      if(0 == (mask&byte)) //±ÿ–Îµ√ «≈–∂œ0 == (mask&byte),»Áπ˚ «≈–∂œ1 == (mask&byte)µƒª∞£¨ƒ«√¥ª·≥ˆ¥Ì
  81   2                      {
  82   3                              SDA = 0;
  83   3                      }
  84   2                      else
  85   2                      {
  86   3                              SDA = 1;
  87   3                      }
  88   2                      mask >>= 1;
  89   2                      Delay_i2c(); 
  90   2                      SCL = 1;        //‘⁄sda∑¢ÀÕ ˝æ› ±£¨scl±ÿ–Î±£≥÷∏ﬂµÁ∆Ω
  91   2                      Delay_i2c();
  92   2              }
  93   1              SCL = 0;  //◊Ó∫ÛSCLæ≠¿˙¡À“ª∏ˆ¥”µÕµÁ∆ΩµΩ∏ﬂµÁ∆Ω‘ŸµΩµÕµÁ∆Ωµƒ±‰ªØ,∂¯SDAµƒ◊¥Ã¨“ª÷±≤ª±‰
  94   1              SDA = 1;
  95   1              Delay_i2c();    //ªπ»±…ŸΩ” ‹¥”ª˙”¶¥Œªµƒ”Ôæ‰
  96   1              SCL = 1;
  97   1              j = SDA;
  98   1              Delay_i2c();
  99   1              SCL = 0;                
 100   1      }
 101          
 102          
 103          unsigned char i2c_read_data()
 104          {
 105   1              unsigned char i;
 106   1              unsigned char byte = 0;
 107   1              for(i = 0;i < 8;i++)
 108   1              {
 109   2                      SCL = 0;
 110   2                      SDA = 1;//√ø“ª¥Œ±ÿ–Îœ»Ω´SDA÷√∏ﬂµÁ∆Ω
 111   2                      Delay_i2c();
 112   2                      SCL = 1;
 113   2                      Delay_i2c();
 114   2                      byte <<= 1;     //œ»◊Û“∆“ªŒª,»Áπ˚◊Û“∆∑≈‘⁄if”Ôæ‰∫Û√Êµƒª∞£¨µ±i=7µƒ ±∫Ú£¨◊Ó∫Ûªπª·÷¥––“ªæ‰◊Û“∆£¨ƒ«√¥◊Ó∏ﬂŒªΩ´ª·±ª
             -“∆≥ˆ»•
 115   2                      if(1 == SDA)
C51 COMPILER V9.01   I2C_MCU_UART                                                          11/24/2016 01:03:34 PAGE 3   

 116   2                      {
 117   3                              byte = byte | 0x01;                     
 118   3                      }                                          
 119   2                      Delay_i2c();
 120   2              }
 121   1              SCL = 0;
 122   1              SDA = 1;
 123   1              Delay_i2c();
 124   1              SCL = 1;
 125   1              Delay_i2c();
 126   1              SCL = 0;
 127   1              return byte;
 128   1      }
 129          
 130          
 131          
 132          
 133          /*i2cœÚeeprom÷––¥»Î ˝æ›*/
 134          void i2c_write_eeprom(unsigned char addr,unsigned char databyte)
 135          {
 136   1              i2c_start_fun();//‘⁄–¥∫Ø ˝µƒø™ º–Ë“™“ª∏ˆ∆ º–≈∫≈
 137   1              i2c_write_data(0xa0);//œ»–¥»Î∆˜º˛º¥eepromµƒµÿ÷∑
 138   1      
 139   1              i2c_write_data(addr);//‘Ÿ–¥»Î ˝æ›¥Ê¥¢µÿ÷∑
 140   1      
 141   1              i2c_write_data(databyte);//◊Ó∫Û–¥»Î“™∑¢ÀÕµƒ ˝æ›
 142   1      
 143   1              i2c_stop_fun();//‘⁄–¥∫Ø ˝µƒ◊Ó∫Û–Ë“™“ª∏ˆÕ£÷π–≈∫≈
 144   1      
 145   1      }
 146          
 147          
 148          /*i2c¥”eeprom÷–∂¡»° ˝æ›*/
 149          unsigned char i2c_read_eeprom(unsigned char addr)
 150          {
 151   1              unsigned char databyte;
 152   1              i2c_start_fun();
 153   1              i2c_write_data(0xa0);
 154   1      
 155   1              i2c_write_data(addr);
 156   1      
 157   1              i2c_start_fun();
 158   1              i2c_write_data(0xa1);
 159   1      
 160   1              databyte = i2c_read_data();
 161   1              i2c_stop_fun();
 162   1              return databyte;
 163   1      }
 164          
 165          
 166          
 167          
 168          void Send_data(unsigned char duan,unsigned char wei)
 169          {
 170   1              unsigned char i;           //ªπ «”√hc595“∆Œªºƒ¥Ê∆˜¿¥Ω¯––≤Ÿ◊˜£¨≤Œ’’◊≈ ˝¬Îπ‹µƒ‘≠¿Ì”Î ±–Ú¿¥–¥≥Ã–Ú
 171   1              HC595_RCK = 0;
 172   1              for(i = 0;i < 8;i++)
 173   1              {
 174   2                      HC595_SCK = 0;
 175   2                      if(0 != (duan&0x80))
 176   2                      {
 177   3                              HC595_DATA = 1;
C51 COMPILER V9.01   I2C_MCU_UART                                                          11/24/2016 01:03:34 PAGE 4   

 178   3                      }
 179   2                      else
 180   2                      {
 181   3                              HC595_DATA = 0;
 182   3                      }
 183   2                      HC595_SCK = 1;
 184   2                      duan = duan << 1;
 185   2              }
 186   1              for(i = 0;i < 8;i++)
 187   1              {
 188   2                      HC595_SCK = 0;
 189   2                      if(0 != (wei&0x80))
 190   2                      {
 191   3                              HC595_DATA = 1;
 192   3                      }
 193   2                      else 
 194   2                      {
 195   3                              HC595_DATA = 0;
 196   3                      }
 197   2                      HC595_SCK = 1;
 198   2                      wei = wei << 1;
 199   2              }
 200   1              HC595_RCK = 1;
 201   1      }
 202          
 203          
 204          
 205          
 206          /*∂® ±∆˜≥ı ºªØ  ÷–∂œ≥ı ºªØ    ¥Æø⁄øÿ÷∆ºƒ¥Ê∆˜SCON≥ı ºªØ*/
 207          void UART_init(void)
 208          {
 209   1              SCON = 0x50;
 210   1              TMOD = 0x20;
 211   1              TH1  = 0xFD;
 212   1              TL1  = 0xFD;
 213   1              TR1  = 1;
 214   1              ET1 = 0;                //Ω˚÷π∂® ±∆˜1÷–∂œ
 215   1              EA = 1;
 216   1              ES = 1;
 217   1      }
 218          
 219          void UART_Send_Byte(unsigned char dat)
 220          {
 221   1              SBUF = dat;
 222   1              while(!TI);
 223   1              TI = 0;
 224   1      }
 225          
 226          void Receive_fun()
 227          {
 228   1              if(1 == receive_flag) //‘⁄while÷–≤ªÕ£µƒºÏ≤‚receive_flag «∑ÒŒ™1,µ±Œ™1µƒ ±∫ÚÀµ√˜“—æ≠Ω¯»Îπ˝÷–∂œ£¨≤¢«“Ω¯»Î÷–∂
             -œµƒÃıº˛ «SBUF“—æ≠Ω” ’µΩ ˝æ›
 229   1              {
 230   2                      receive_flag = 0;
 231   2              
 232   2              }       
 233   1      }
 234          
 235          
 236          
 237          void main()
 238          {
C51 COMPILER V9.01   I2C_MCU_UART                                                          11/24/2016 01:03:34 PAGE 5   

 239   1              UART_init();
 240   1              InitI2C();      
 241   1              read_data = i2c_read_eeprom(addr);
 242   1              UART_Send_Byte(read_data);
 243   1              temp = read_data << 4;
 244   1              value_low = temp >> 4;
 245   1              value_high = read_data >> 4;
 246   1              while(1)
 247   1              {       
 248   2                      Receive_fun();
 249   2                      Send_data(Duan_choose[value_high],Wei_choose[0]);
 250   2                      Send_data(Duan_choose[value_low],Wei_choose[1]);        
 251   2              }
 252   1                              
 253   1      }
 254          
 255          
 256          void interrupt_4() interrupt 4
 257          {
 258   1              //Send_data(Duan_choose[0],Wei_choose[0]);
 259   1              RI = 0;
 260   1              receive_data = SBUF;
 261   1              i2c_write_eeprom(addr,receive_data);
 262   1              receive_flag = 1;
 263   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    390    ----
   CONSTANT SIZE    =     24    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
