C51 COMPILER V9.01   UART_TX                                                               09/13/2016 22:53:47 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE UART_TX
OBJECT MODULE PLACED IN Uart_Tx.OBJ
COMPILER INVOKED BY: F:\51\C51\BIN\C51.EXE Uart_Tx.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg52.h>
   2          /*
   3          sbit HC595_SCK = P1^1;
   4          sbit HC595_RCK = P1^0;
   5          sbit HC595_DATA = P1^4;  //目前这个程序还用不着这些定义
   6          
   7          code unsigned char Shu_Duan_Chose[16] = {0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x77,0x7c,0x39,
             -0x5e,0x79,0x71};
   8          code unsigned char Shu_Wei_Chose[16]  = {0xfe,0xfd,0xfb,0xf7,0xef,0xdf,0xbf,0x7f,0xfe,0xfd,0xfb,0xf7,0xef,
             -0xdf,0xbf,0x7f};
   9          code unsigned char Led8_One[16] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0
             -x00,0x00};
  10          code unsigned char Led8_Two[16] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0
             -x00,0x00};
  11            */
  12          unsigned char Given_Data = 0x55;
  13          
  14          void Serial_Timer1_Init()
  15          {
  16   1              TMOD = 0x20;              //定时器1采用工作方式2（从0开始），溢出能够自动重装
  17   1              SCON = 0X50;          //选择串行控制寄存器的工作方式，选择为工作模式1,十六进制为0B0101 0000，即SM0 = 0，S
             -M1 = 1,SM2 = 0,REN = 1，工作模式1位8位寄存器，波特率由定时器的溢出时间决定
  18   1              TH1 = 0xfd;          // 256 - 11059200/(12*32*9600)     ，因为工作方式2采用8位计数器，所以2^8=256，32是单片机
             -的采样率，12是一个指令周期，是时钟周期的12倍
  19   1              TL1 = 0XFD;
  20   1              TR1 = 1;                         //TR1 = 1使得定时器1可以工作
  21   1              ES = 1;                           //串行总中断开关       指的是串口的中断吗
  22   1              //ET1 = 1;                       //定时器1的中断开关
  23   1              EA = 1;            //中断允许总控制位
  24   1      }
  25          
  26          /*void Uart_Tx_Init()                                                   //uart
  27          {
  28                  SCON = 0x50;
  29                  PCON = 0X80;
  30                  REN = 1;
  31          }  */                  //这个函数里的内容可以直接写在上面那个函数里，但是我想分开写也是可以的？要试一试
  32          
  33          
  34          void Delay1ms(int i)
  35          {
  36   1              int j;
  37   1              for(;i > 0;i--)
  38   1              {
  39   2                      for(j = 0;j < 110;j++);
  40   2              }
  41   1      }
  42          
  43          void Delay()
  44          {
  45   1              unsigned char Num = 20000;
  46   1              while(Num--)
  47   1              {
  48   2              }
  49   1      } 
C51 COMPILER V9.01   UART_TX                                                               09/13/2016 22:53:47 PAGE 2   

  50          
  51          
  52          
  53          void Send_Data(unsigned char Data)
  54          {
  55   1              SBUF = Data;            
  56   1      }
  57          
  58          
  59          
  60          void main()
  61          {
  62   1              //Send_Data(unsigned char Data);
  63   1              /*TMOD = 0X20;
  64   1              SCON = 0X50;
  65   1              TH1 = TL1 = 0xfd;                                 //256 - 11059200/(12*32*9600)
  66   1              EA = 1;
  67   1              ES = 1;
  68   1              TR1 = 1;
  69   1              ET1 = 1;
  70   1              Uart_Tx_Init();  */     //这些都写在初始化函数里了，应该试一试单独写在main函数里可以吗？
  71   1              //Delay1ms(int i);
  72   1              //Delay();
  73   1              
  74   1              
  75   1              Serial_Timer1_Init();
  76   1              
  77   1              while(1)
  78   1              {
  79   2                      //SBUF = 0X55;     //要单独写个数据发送函数，在while里一直执行
  80   2                      Send_Data(Given_Data++);          //每循环一次之后加1
  81   2                      Delay1ms(1000);
  82   2                      //Delay();
  83   2              }
  84   1      }
  85          
  86          
  87          void interrupt_Uart_Tx() interrupt 4       //判断是否发送数据的中断，若发送数据则清零才能重新发送
  88          {
  89   1              //EA = 1;
  90   1              //ES = 1;
  91   1              if(1 == TI)                //TI 检测是否已发送数据，若已发送，则TI会被硬件置1，
  92   1                                                      //所以要用软件置0才能重新接着发送
  93   1              {
  94   2                      TI = 0;
  95   2      
  96   2              }
  97   1              if(1 == RI)
  98   1              {
  99   2                      RI = 0;
 100   2              }
 101   1      }
 102          
 103          /*void interrupt_SendData() interrupt 3         //根本就不需要的函数，应该写一个发送数据
 104                                                                                                  的函数而不是在中断程序里发送函数
 105                                                                                                  写中断程序就是为了检测是否已发送数据，若发送，则把TI（发送标志位清零）
 106                                                                                                  这样才能继续发送数据
 107                                                                                                  
 108          {
 109                  EA = 1;
 110                  ES = 1;
 111                  SBUF = 0x55;
C51 COMPILER V9.01   UART_TX                                                               09/13/2016 22:53:47 PAGE 3   

 112          } */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     94    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
